Single Element in a Sorted Array

You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. 
Find this single element that appears only once. 

Example 1:
Input: [1,1,2,3,3,4,4,8,8]
Output: 2

Example 2:
Input: [3,3,7,7,10,11,11]
Output: 10

Note: Your solution should run in O(log n) time and O(1) space.

References:
https://leetcode.com/explore/challenge/card/may-leetcoding-challenge/535/week-2-may-8th-may-14th/3327/
https://www.youtube.com/watch?v=nMGL2vlyJk0

Why Binary Search works for this problem?
	Boundary checks
	Pair Index Property
	Unique Element Property
	Partition Property

	Works based on the idea that, since other elements are appearing exactly twice before the occurance of the unique element the first occurance of an element will be in the even index and ends at
	an odd index. After the occurance of the unique element, the first occurance of the element will be at the odd index and ends at an even index.